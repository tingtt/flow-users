stages:
  - delivery
  - build
  - deploy

push-github:
  stage: delivery
  only:
    - main
    - tags
  before_script:
    - eval "$(ssh-agent -s)"
    - echo "$GITHUB_SSH_SECRET" | tr -d '\r' | ssh-add -
    - git config --local user.name "$GITHUB_USER"
    - git config --local user.email "$GITHUB_EMAIL"
    - git remote add github "$GITHUB_REMOTE_URL" || true
  script:
    - git branch main || git checkout main
    - git pull origin main -r
    - git push github main -f --tags

build-main-job:
  stage: build
  only:
    - main
  script:
    - docker build . -t $DOCKER_REGISTORY_URL/$CI_PROJECT_PATH:latest

push-main-job:
  stage: build
  only:
    - main
  needs:
    - build-main-job
  script:
    - docker push $DOCKER_REGISTORY_URL/$CI_PROJECT_PATH:latest

push-tags-job:
  stage: build
  only:
    - tags
  needs:
    - build-main-job
  script:
    - docker tag $DOCKER_REGISTORY_URL/$CI_PROJECT_PATH $DOCKER_REGISTORY_URL/$CI_PROJECT_PATH:$CI_COMMIT_TAG
    - docker push $DOCKER_REGISTORY_URL/$CI_PROJECT_PATH:$CI_COMMIT_TAG

deploy-job:
  stage: deploy
  only:
    - main
    - tags
  before_script:
    - cat .env >> /dev/null && sudo docker-compose stop web || true
    - |
      echo -e \
      "TZ=$TZ
      PORT=$PORT
      MYSQL_PASSWORD=$MYSQL_PASSWORD
      MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      JWT_ISSUER=$JWT_ISSUER
      JWT_SECRET=$JWT_SECRET
      GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID
      GITHUB_CLIENT_SECRET=$GITHUB_CLIENT_SECRET
      GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
      GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      TWITTER_CLIENT_ID=$TWITTER_CLIENT_ID
      TWITTER_CLIENT_SECRET=$TWITTER_CLIENT_SECRET
      ARGS=$ARGS" > .env
    - mkdir db/log -p
    - chmod -R 777 db/log
  script:
    - docker-compose up -d --build --force-recreate
